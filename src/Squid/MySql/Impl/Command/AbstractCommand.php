<?php
namespace Squid\MySql\Impl\Command;


use Squid\MySql\Command\IMySqlCommandConstructor;
use Squid\MySql\Connection\IMySqlConnection;
use Squid\Exceptions\SquidException;


abstract class AbstractCommand implements IMySqlCommandConstructor
{
	/** @var IMySqlConnection */
	private $conn = null;
	
	
	/**
	 * @return IMySqlConnection|null
	 */
	protected function getConn() 
	{
		return $this->conn;
	}
	
	protected function getVersion(): string
	{
		return $this->conn->version();
	}
	
	
	/**
	 * Set the connection to use.
	 * @param \Squid\MySql\Connection\IMySqlConnection $conn
	 */
	public function setConnection(IMySqlConnection $conn) 
	{
		$this->conn = $conn;
	}

	/**
	 * Execute the generated query.
	 * @return \PDOStatement|null Result generated by the query, or null on fail.
	 * @throws SquidException
	 */
	public function execute() 
	{
		if (is_null($this->conn))
			throw new SquidException("Can't execute query, implicitly created without connection!");
		
		$cmd = $this->assemble();
		$bind = $this->bind();
		
		return $this->conn->execute($cmd, $bind);
	}
	
	/**
	 * @return string
	 */
	public function __toString()
	{
		$bind = json_encode($this->bind());
		return "{$this->assemble()} <=> $bind";
	}
}